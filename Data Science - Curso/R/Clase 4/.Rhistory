binwidth=0.1)
a+geom_histogram(aes(Sepal.Length),
colors()=Species,
binwidth=0.1)
a+geom_histogram(aes(Sepal.Length),
colors=Species,
binwidth=0.1)
a+geom_histogram(aes(Sepal.Length),
color=Species,
binwidth=0.1)
geom_histogram()?
a+geom_histogram(aes(Sepal.Length),
color=Species,
binwidth=0.1)?
a+geom_histogram(aes(Sepal.Length),
col=Species,
binwidth=0.1)?
a+geom_bar(aes(Species))
a<-ggplot(iris)
a+geom_histogram(aes(Sepal.Length),
binwidth=0.1)
a+geom_bar(aes(Species))
a+geom_point(aes(Sepal.Length,Sepal.Length))
a+geom_point(aes(Sepal.Length,Sepal.Width))
a+geom_bar(aes(Species,Petal.Length))
a+geom_bar(aes(Species,Petal.Length),stat='identity')
View(iris)
a+geom_boxplot(aes(Species,Petal.Length))
a+geom_point(aes(Sepal.Length,Sepal.Width,color=Species))
a+geom_point(aes(Petal.Length,Petal.Width,color=Species))
a+geom_point(aes(Petal.Length,Petal.Width,fill=Species))
a+geom_point(aes(Petal.Length,Petal.Width,shape=Species))
a+geom_point(aes(Petal.Length,Petal.Width,
shape=Species,
color=Species))
a+geom_point(aes(Petal.Length,Petal.Width,
shape=Species,
color=Species))+
scale_color_manual(values=c('red','yellow','purple'))
a+geom_point(aes(Petal.Length,Petal.Width))+
scale_color_manual(values=c('red','yellow','purple'))
a+geom_point(aes(Petal.Length,Petal.Width))+scale_color_manual(values=c('red','yellow','purple'))
a+geom_point(aes(Petal.Length,Petal.Width,
color=Species))+
scale_color_manual(values=c('red','yellow','purple'))
a+geom_point(aes(Petal.Length,Petal.Width,
color=Species,
size=Species))+
scale_color_manual(values=c('red','yellow','purple'))
a+geom_point(aes(Petal.Length,Petal.Width,
color=Species))+
scale_color_manual(values=c('red','yellow','purple'))
a+geom_point(aes(Petal.Length,Petal.Width,
color=Species))+
scale_color_manual(values=c('red','gray','purple'))
a+geom_point(aes(Petal.Length,Petal.Width,
color=Species))+
scale_color_manual(values=c('red','gray','purple'))+
scale_shape_manual(values=c(19,6,8))
a+geom_point(aes(Petal.Length,Petal.Width,
color=Species,
shape=Species))+
scale_color_manual(values=c('red','gray','purple'))+
scale_shape_manual(values=c(19,6,8))
a+geom_point(aes(Petal.Length,Petal.Width,
color=Species,
shape=Species))+
scale_color_manual(values=c('red','orange','purple'))+
scale_shape_manual(values=c(19,6,8))
?geom_point
a+geom_point(aes(Petal.Length,Petal.Width,
color=Species,
shape=Species))+
scale_color_manual(values=c('red','orange','purple'))+
scale_shape_manual(values=c(19))
boxplot(iris$Petal.Length ~ iris$Species)
?boxplot
cafe <- c(510,492,494,498,492,496,502,491,507,496)
#Ejercicio para la varianza poblacional de dos muestras
t1<-c(76,85,74,78,82,75,82)
t2<-c(57,67,55,64,61,63,63)
q1<-qqnorm(t1,plot.it=F)
q2<-qqnorm(t2,plot.it=F)
plot(range(q1$x,q2$x),range(q1$y,q2$y),type="n",las=1,
xlab='Cuantiles teóricos',ylab='Cuantiles de muestra')
points(q1,pch=19)
points(q2,col='red',pch=19)
qqline(t1,lty='dashed')
qqline(t2,col="red",lty='dashed')
legend('topleft',legend=c('t1','t2'),
bty='n',col=c('black','red'),pcg=19)
legend('topleft',legend=c('t1','t2'),
bty='n',col=c('black','red'),pch=19)
#Al observar los puntos bastante alineados nos hace pensar que las muestras provienen de una población normal
var.test(t1,t2,null.value=1,alternative="two.sided",
conf.level=0.95)
?var.test
var.t1
var(t1)
var(t2)
#Ejercicio para dos varianzas muestrales
ur<-c(3,7,25,10,15,6,12,15,7)
ru<-c(48,44,40,38,33,21,20,12,1,18)
length(ur)
length(ru)
#Ejercicio para dos varianzas muestrales
ur<-c(3,7,25,10,15,6,12,25,15,7)
ru<-c(48,44,40,38,33,21,20,12,1,18)
length(ur)
length(ru)
var(ur)
var(ru)
q1<-qqnorm(ur,plot.it = F)
q1
q2<-qqnorm(ru,plot.it = F)
plot(range(q1$x,q2$x),range(q1$y,q2$y),type="n",las=1,
xlab='Cuantiles teóricos',ylab='Cuantiles de muestra')
points(q1,pch=19)
points(q2,col='red',pch=19)
qqline(t1,lty='dashed')
qqline(t2,col="red",lty='dashed')
legend('topleft',legend=c('t1','t2'),
bty='n',col=c('black','red'),pch=19)
qqline(ur,lty='dashed')
qqline(ru,col="red",lty='dashed')
legend('topleft',legend=c('ur','ru'),
bty='n',col=c('black','red'),pch=19)
var.test(ur,ru,null.value=1,alternative="two.sided",
conf.level=0.95)
datos<-data.frame(tiempo=c(t1,t2),trat=rep(1:2,each=7))
datos
boxplot(tiempo~trat,data=datos,las=1,
xlab='Tratamiento',ylab='Tiempo (min)')
t.test(t1,t2,alternative="two.sided",mu=0,var.equal = T,
conf.level =0.97 )
#Ejercicio de diferencia de muestras p/varianzas diferentes
datos<-data.frame(Concentracion=c(ur,ru),
Zona=rep(c('Urbana','Rural'),each=10))
datos
boxplot(Concentracion~Zona,data=datos,las=1,
xlab='Zona',ylab='Concentracion Arsenico(ppb)')
mean(ur)
men(ru)
mean(ru)
t.test(ur,ru,alternative="two.sided",mu=0,
paired=False,var.equal=F,conf.level=0.95)
t.test(ur,ru,alternative="two.sided",mu=0,
paired=F,var.equal=F,conf.level=0.95)
datos <- read.table("mydata.csv",header=T,sep=",",dec=".")
library(patchwork)
patchwork
install.packages(patchwork)
install.packages('patchwork')
library(patchwork)
# Visualizacion de Datos II
# Objetivos:
#          - Construccion de tableros usando patchwork y ggplot2
#          - Aplicacion de etiquetas y temas en ggplot
library(ggplot2);library(patchwork)
data(iris)
a<-ggplot(iris)
a
puntos<-ggplot(iris)
puntos<-ggplot(iris) + geom_point(aes(Petal.Width,
Petal.Length))
puntos
puntos<-ggplot(iris) + geom_point(aes(Petal.Width,
Petal.Length),
col='red')
puntos
puntos<-ggplot(iris) + geom_point(aes(Petal.Width,
Petal.Length,
color=Species))
puntos
hist_sepalo <- geom_histogram(aes(iris$Sepal.Length))
hist_sepalo
hist_sepalo <- geom_histogram(aes(iris$Sepal.Length))
hist_sepalo
hist_sepalo <- ggplot(iris) +geom_histogram(aes(iris$Sepal.Length))
hist_sepalo
hist_sepalo <- ggplot(iris) +geom_histogram(aes(Sepal.Length,
fill=Species))
hist_sepalo
boxplot<-ggplot(iris)+geom_boxplot(aes(Species,Sepal.Width))
boxplot
barras <- ggplot(iris)+geom_bar(aes(Sepal.Width))
barras
(puntos+barras)/(hist_sepalo+boxplot)
puntos/hist_sepalo | barras
ggplot(iris)+geom_boxplot(aes(Species,Sepal.Width))
puntos/hist_sepalo | barras/boxplot
?patchwork-package
?'patchwork-package'
puntos/hist_sepalo | barras/boxplot + plot_layout(ncol = 2, widths = c(1, 2))
puntos + labs(title='Relacion entre el ancho y largo de petalo',
subtitle='gráfico de puntos',
x='Largo de petalo (cm)',
y='Ancho de petalo (cm)')
puntos + labs(title='Relacion entre el ancho y largo de petalo',
subtitle='gráfico de puntos',
x='Largo de petalo (cm)',
y='Ancho de petalo (cm)',
caption='Fuente: dataset')
puntos + labs(title='Relacion entre el ancho y largo de petalo',
subtitle='gráfico de puntos',
x='Largo de petalo (cm)',
y='Ancho de petalo (cm)',
caption='Fuente: dataset iris')
puntos + labs(title='Relacion entre el ancho y largo de petalo',
subtitle='gráfico de puntos',
x='Largo de petalo (cm)',
y='Ancho de petalo (cm)',
caption='Fuente: dataset iris',
tag='Figura1')
puntos + labs(title='Relacion entre el ancho y largo de petalo',
subtitle='gráfico de puntos',
x='Largo de petalo (cm)',
y='Ancho de petalo (cm)',
caption='Fuente: dataset iris',
tag='Figura 1')
puntos + labs(title='Relacion entre el ancho y largo de petalo',
subtitle='gráfico de puntos',
x='Largo de petalo (cm)',
y='Ancho de petalo (cm)',
caption='Fuente: dataset iris',
tag='Figura 1')+
theme(panel.grid)
puntos + labs(title='Relacion entre el ancho y largo de petalo',
subtitle='gráfico de puntos',
x='Largo de petalo (cm)',
y='Ancho de petalo (cm)',
caption='Fuente: dataset iris',
tag='Figura 1')+theme(panel.grid)
puntos + labs(title='Relacion entre el ancho y largo de petalo',
subtitle='gráfico de puntos',
x='Largo de petalo (cm)',
y='Ancho de petalo (cm)',
caption='Fuente: dataset iris',
tag='Figura 1') + theme(panel.grid)
puntos + theme(axis.line=element_blank())
puntos + theme(axis.line=element_render())
puntos + theme(axis.line=element_line(color='black')))
puntos + theme(axis.line=element_line(color='black'))
puntos<-puntos + labs(title='Relacion entre el ancho y largo de petalo',
subtitle='gráfico de puntos',
x='Largo de petalo (cm)',
y='Ancho de petalo (cm)',
caption='Fuente: dataset iris',
tag='Figura 1')
puntos + theme(axis.line=element_line(color='black'))
puntos + theme(axis.line=element_line(color='black'),
panel.background = element_blank())
puntos + theme(axis.line=element_line(color='black'),
panel.background = element_blank(),
title=element_text(color = 'grey50'))
puntos + theme(axis.line=element_line(color='black'),
panel.background = element_blank(),
title=element_text(color = 'grey50'),
plot.title=element_text(face='bold'))
puntos + theme(axis.line=element_line(color='black'),
panel.background = element_blank(),
title=element_text(color = 'grey50'),
plot.title=element_text(face='bold'),
axis.title.x=element_text(hjust=1),
axis.title.x=element_text(hjust=1))
puntos + theme(axis.line=element_line(color='black'),
panel.background = element_blank(),
title=element_text(color = 'grey50'),
plot.title=element_text(face='bold'),
axis.title.x=element_text(hjust=1),
axis.title.y=element_text(hjust=1))
puntos + theme(axis.line=element_line(color='black'),
panel.background = element_blank(),
title=element_text(color = 'grey50'),
plot.title=element_text(face='bold'),
axis.title.x=element_text(hjust=1),
axis.title.y=element_text(hjust=1),
panel.grid=element_line(color='black'))
(puntos+barras)/(hist_sepalo+boxplot)+ theme(axis.line=element_line(color='black'),
panel.background = element_blank(),
title=element_text(color = 'grey50'),
plot.title=element_text(face='bold'),
axis.title.x=element_text(hjust=1),
axis.title.y=element_text(hjust=1),
panel.grid=element_line(color='black'))
(puntos+barras)/(hist_sepalo+boxplot)
(puntos+barras)/(hist_sepalo+boxplot)
barras/(hist_sepalo+boxplot)
barras/(hist_sepalo+boxplot)+ theme(axis.line=element_line(color='black'),
panel.background = element_blank(),
title=element_text(color = 'grey50'),
plot.title=element_text(face='bold'),
axis.title.x=element_text(hjust=1),
axis.title.y=element_text(hjust=1),
panel.grid=element_line(color='black'))
boxplot
boxplot+theme_dark()
datos <- data('rock')
datos
datos <- data(rock)
datos
data(rock)
data("rock")
?data(rock)
rock <- data(rock)
rock <- data(rock)
?data(rock)
?"rock"
data("rock")
force(rock)
View(rock)
str(datos)
str(rock)
r <- ggplot(rock)
puntos <- r + geom_point(aes(peri,shape))
puntos
box <- r + geom_boxplot(aes(peri,shape))
box
View(r)
View(r)
View(puntos)
View(box)
View(rock)
puntos
puntos <- r + geom_point(aes(perm,shape))
puntos
puntos <- r + geom_point(aes(area,shape))
puntos <- r + geom_point(aes(perm,shape))
puntos
puntos2 <- r + geom_point(aes(area,shape))
puntos2
View(rock)
cut(rock$perm,breaks=seq(0,500,by=500),include.lowest = T)
cut(rock$perm,breaks=seq(0,500,by=500))
rock$grupo <- cut(rock$perm,breaks=seq(from=0,to=500,by=500))
rock
box
box <- r + geom_boxplot(aes(perm,shape))
box
rock$grupo <- cut(rock$perm,breaks=seq(from=0,to=500))
rock
rock$grupo <- cut(rock$perm,breaks=seq(from=0,to=1000,by=500))
rock
rock$grupo <- cut(rock$perm,breaks=seq(from=0,to=1500,by=500))
rock
rock_hist <- ggplot(rock) + geom_histogram(aes(area,color=grupo))
rock_hist
getwd()
setwd("D:/DataScience/Data Science - Curso/R/Clase 4")
getwd()
#Buscamos datasets para practicar --> ?data()
#Cargamos el dataset
titanic <- read.csv("./titanic/train.csv")
str(titanic)
names(titanic)#Nombre de las columnas
length(titanic)#Cantidad de columnas
head(titanic,n=1L)#Primeros 6L
?read.csv()
dim(titanic)#dimension del dataset
length(names(titanic))
is.na(titanic)
sum(is.na(titanic))#Cantidad de valores NUll/na del dataset
which(is.na(titanic$Age)==TRUE)
age_mean <- mean(titanic$Age,na.rm = TRUE)
age_mean
summary(titanic)#sumario del dataset
sapply(titanic,class)
#Transformamos el tipo de dato de las columnas Survived y Sex para que sean un factor
titanic$Survived <- as.factor(titanic$Survived)
class(titanic$Survived)
titanic$Sex <- as.factor(titanic$Sex)
class(titanic$Sex)
titanic$Embarked <- as.factor(titanic$Embarked)
class(titanic$Embarked)
#Buscamos na y completamos el dataset por c/columna
sum(is.na(titanic$Sex))
sum(is.na(titanic$Age)) # Este tiene 177 na
sum(is.na(titanic$Embarked))
sum(is.na(titanic$Survived))
sum(is.na(titanic$Cabin))
sum(is.na(titanic$Ticket))
sum(is.na(titanic$Sex))
#Asignamos valor promedio de Age donde existan na valores
titanic$Age[is.na(titanic$Age)] <- age_mean
sum(is.na(titanic$Age))
titanic$Age
sum(is.na(titanic))# Ahora el dataset está completo
#Hacemos análisis exploratorio mediante gráficas
library(ggplot2)
a <- ggplot(titanic)
a+geom_bar(aes(Sex))
a+geom_bar(aes(Survived))
bar_sex<-a+geom_bar(aes(Sex))
bar_survived <- a+geom_bar(aes(Survived))
hist_age <- a+geom_histogram(aes(Age))
bar_sex/bar_survived/hist_age
library(patchwork)
bar_sex/bar_survived/hist_age
a+geom_boxplot(aes(Survived,Age))
a+geom_boxplot(aes(Sex,Age))
a+geom_point(aes(Sex,Age),color=Survived))
a+geom_point(aes(Sex,Age),color=Survived)
a+geom_point(aes(Sex,Age))
a+geom_point(aes(Sex,Age),color=Survived)
a+geom_point(aes(Sex,Age),color=Survived)
a+geom_boxplot(aes(Survived,Age),color=Sex)
a+geom_boxplot(aes(Sex,Age),color=titanic$Survived)
a+geom_boxplot(aes(Sex,Age),color=Survived)
a+geom_boxplot(aes(Sex,Age),fill=Survived)
View(titanic)
a+geom_bar(aes(Embarked,Survived))
a+geom_bar(aes(Embarked))
source("D:/DataScience/Data Science - Curso/R/Clase 4/practice.R", echo=TRUE)
a+geom_bar(aes(Pclass))
a+geom_point(aes(Sex,Pclass))
a+geom_point(aes(Age,Pclass))
a+geom_point(aes(Survived,Sex))
a+geom_area(aes(Survived,Sex))
a+geom_boxplot(aes(Survived,Sex))
a+geom_density(aes(Survived,Sex))
a+geom_count(aes(Survived,Sex))
a+geom_count(aes(Survived,Pclass))
# Hacemos una prueba de hipotesis
# Decimos: que en promedio las personas que viajaban en primera clase se salvaron
table(titanic$Survived,titanic$Pclass)#construyo table de contigencia
cov(titanic$Survived,titanic$Pclass)
sapply(titanic)
sapply(titanic,class)
titanic$Pclass <- as.factor(titanic$Pclass)
class(titanic$Pclass)
# Hacemos una prueba de hipotesis
# Decimos: que en promedio las personas que viajaban en primera clase se salvaron
table(titanic$Survived,titanic$Pclass)#construyo table de contigencia
cov(titanic$Survived,titanic$Pclass)
saplly(titanica,class)
sapply(titanica,class)
sapply(titanic,class)
sum(is.na(titanic))
cov(titanic$Survived,titanic$Age)
library(MASS)
cov(titanic$Survived,titanic$Age)
cov(table)
# Hacemos una prueba de hipotesis
# Decimos: que en promedio las personas que viajaban en primera clase se salvaron
tabla<-table(titanic$Survived,titanic$Pclass)#construyo table de contigencia
cov(tabla)
tabla
cov(tabla)
datos <- read.csv2( "mydata.csv", header = TRUE,sep = "," , dec = ",")
str(datos)
summary(datos)
range(datos$EDAD)
range(titanic$Age)
min(titanic$Age)
hist_age <- a+geom_histogram(aes(Age))
bar_sex/bar_survived/hist_age
range(titanic$Fare)
a+geom_histogram(aes(titanic$Fare))
?Titanic
a+geom_boxplot(aes(Survived,Age))
a+geom_bar(aes(Sex,Age),fill=Survived)
a+geom_bar(aes(Survived,Age))
a+geom_count(aes(Survived,Age))
titanic$Sex["female"] <- 0
titanic$Sex["female"] <- "F"
#Test de hipotesis
#Se desea contrastar la hipotesis con un nivel de significancia de que los pasajeros que viajaban en 3ra clase
#eran los que No iban a sobrevivir contra las demas clases que si iban a sobrevivir
#H0: u=3
#H1: u<3
age <- titanic$Age
str(age)
class(age)
summary(age)
type(age)
age
str(age)
seq(age)
sapply(age,class)
#Test de hipotesis
#Se desea contrastar la hipotesis con un nivel de significancia de que los pasajeros que viajaban en 3ra clase
#eran los que No iban a sobrevivir contra las demas clases que si iban a sobrevivir
#H0: u=3
#H1: u<3
age <- c(titanic$Age)
sapply(age,class)
age
var(age)
range(age)
library(BSDA)
?z.test
z.test(x=age,y=NULL,alternative="two.sided",mu=30,sigma.x=sd(age),sigma.y=NULL,conf.level=0.95)
z.test(x=age,y=NULL,alternative="less",mu=30,sigma.x=sd(age),sigma.y=NULL,conf.level=0.95)
#Test de normalidad
shapiro.test(age)
?t.test()
#Test de hipotesis t-student
t.test(age,mu=30)
?spearman
??spearman
?cor.test
#Test de correlacion entre variables ordinales
cor.test(titanic$Pclass,titanic$Survived,method="spearman")
#Test de correlacion entre variables ordinales
titanic$Survived <- as.numeric(titanic$Survived)
cor.test(titanic$Pclass,titanic$Survived,method="spearman")
survivor <- c(titanic$Survived)
cor.test(titanic$Pclass,survivor,method="spearman")
class(titanic$Pclass)
titanic$Pclass <- as.numeric(titanic$Pclas)
cor.test(titanic$Pclass,survivor,method="spearman")
a+geom_count(aes(Survived,Pclass))
