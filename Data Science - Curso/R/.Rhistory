1+1
1+1
2*2
2**2
3*2
3**2
4/2
8/3
8//3
8%3
8-11
x = 1+1
z
install.packages("UsingR")
x = read.table(file='dataset.csv',dec='.',sep = ',',header = TRUE)
x = read.table(file='./dataset.csv',dec='.',sep = ',',header = TRUE)
GETCWD
getcwd
x = read.table(file='/dataset.csv',dec='.',sep = ',',header = TRUE)
#x = read.table(file='dataset.csv',dec='.',sep = ',',header = TRUE)
x = read.table(file='dataset.csv',sep = ',',header = TRUE)
#x = read.table(file='dataset.csv',dec='.',sep = ',',header = TRUE)
x = read.table(file='dataset.csv')
#x = read.table(file='dataset.csv',dec='.',sep = ',',header = TRUE)
x = read.table(file='D:\Data Science - Curso\R\Clase 3\dataset.csv')
#x = read.table(file='dataset.csv',dec='.',sep = ',',header = TRUE)
x = read.table(file='D:/Data Science - Curso/R/Clase 3/dataset.csv')
#x = read.table(file='dataset.csv',dec='.',sep = ',',header = TRUE)
x = read.table(file='D:/Data Science - Curso/R/Clase 3/dataset.csv',,dec='.',sep = ',',header = TRUE)
View(x)
x
datos
datos = c(12.3,15.4,3,5,6,7)
datos[0]
datos[1]
datos[2]
datos[1],datos[2]
datos[1]+datos[2]
datos[2:5]
#datos[2:5]
datos<=7
datos[c(2,4:6)]
datos[datos>5]
datos[datos>7 & datos<15.4]
nuevo_vector = datos[datos>5]
nuevo_vector
ggsave('figures/fig1.png',p)
#p = ggplot(df,aes(x=x)) + geom_histogram()
#ggsave('figures/fig1.png',p)
df
x = read.table(file='D:/Data Science - Curso/R/Clase 3/bitcoin.csv',dec='.',sep = ',',header = TRUE)
ggsave('figures/fig1.png',p)
install.packages("ggplot2")
ggsave('D:/Data Science - Curso/R/Clase 3/figures/fig1.png',p)
library(dataset)
library(datasets)
help(airquality)
attach(airquality)
Ozone
Ozone[1:5]
Ozone[100]
c(Ozone[1:5],Ozone[100])
c(Ozone[1:5],,Ozone[100])
c(Ozone[1:5], ,Ozone[100])
c(Ozone[1:5],;,Ozone[100])
c(Ozone[1:5],texto,Ozone[100])
c(Ozone[1:5],'text',Ozone[100])
c(Ozone[1:5],Ozone[100])
#Para buscar entre los datos aquellos que cumplen una condicion
which(Month==5)
Ozone[which(Month==5)]
#Para contar la cantidad usamos length
length(which(Month==5))
x
y
table(Month)
table(Month)
#table(Month)
#Para contar la cantidad usamos length
length(which(Month==5))#table(Month)
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
#Para contar la cantidad usamos length
length(which(Month==5))#table(Month)
#
# #Para mostrar varios datos
# c(Ozone[1:5],Ozone[100])
#
#
# #Para buscar entre los datos aquellos que cumplen una condicion
# which(Month==5)
# Ozone[which(Month==5)]
#
#
# #Para contar la cantidad usamos length
# length(which(Month==5))#table(Month)
#Para mostrar varios datos
c(Ozone[1:5],Ozone[100])
x
y
x
X
#Hacer ejercicio para saber si un numero es par o impar
scan()
if (scan%%2==0){
print("Numero par")
}
else {
print("Numero impar")
}
num <- scan()
print("Numero par")
}
else {
print("Numero impar")}
num <- scan()
print("Numero par")
}else {
print("Numero impar")}
if (scan%%2==0){
print("Numero par")
}else {
print("Numero impar")
}
11
num = scan()
print("Numero par")
}else {
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")
}
num = scan()
print("Numero par")
}else{
print("Numero impar")}
#Hacer ejercicio para saber si un numero es par o impar
num = scan()
num = scan(?)
#Hacer ejercicio para saber si un numero es par o impar
num = scan(nmax=1)
if (scan%%2==0){
print("Numero par")
}else{
print("Numero impar")}
if (num%%2==0){
print("Numero par")
}else{
print("Numero impar")}
num = scan(nmax=1)
if (num%%2==0){
print("Numero par")
}else{
print("Numero impar")}
#Hacer ejercicio para saber si un numero es par o impar
num = scan(nmax=1)
if (num%%2==0){
print("Numero par")
}else{
print("Numero impar")}
x <- c(0.32,0.36,0.24,0.11,0.11,0.44,2.79,2.99,3.47,0.23,0.55,3.21,4.02,0.23)
sort(x)
Fn
x <- c(0.32,0.36,0.24,0.11,0.11,0.44,2.79,2.99,3.47,0.23,0.55,3.21,4.02,0.23)
sort(x)
Fn = ecdf(x)
Fn
Fn(1)
median(x)
quantile(x,probs=0.27)
quantile(x,probs=0.8)
if(4 > 3) {
"Verdadero"
} else {
"Falso"
if(4 > 3) {
print("Verdadero")
} else {
print("Falso")
}
if(4 > 3) {
print("Verdadero")
} else {
print("Falso")
}
# Ejemplo 2: Si se cumple la condiciÃ³n, se muestra "Verdadero"
if(4 > 3) {
print("Verdadero")
} else {
print("Falso")
}
print("Verdadero")
if(x>0) {
"el nÃºmero, es positivo"
} else if (x<0) {
"el nÃºmero, es negativo"
} else {
"el nÃºmero, es nulo"
}
x <- 5 # al objeto x le asigno el valor 5
if(x>0) {
"el nÃºmero, es positivo"
} else if (x<0) {
"el nÃºmero, es negativo"
} else {
"el nÃºmero, es nulo"
}
numero = 10
if (numero %% 2 == 0){
print("El numero es par") # me devuelve el mensaje
}else{
print("El numero es impar") # me devuelve el mensaje
}
print("Hola")
numero = 121
if (numero %% 2 == 0){
print("El numero es par") # me devuelve el mensaje
}else{
print("El numero es impar") # me devuelve el mensaje
}
numero = 10
if (numero %% 2 == 0){
print("El numero es par") # me devuelve el mensaje
}else{
print("El numero es impar") # me devuelve el mensaje
}
if(4 > 3) {
print("Verdadero")
} else {
print("Falso")
}
promedio <- function(x){mean(x)}
promedio(c(6,7,8,9,8))
resultado <- function(num){
if(num%%2==0){
print("El numero ",num," es par")
}else{
print("El numero ",num," es impar")
}
}
resultado(10)
resultado <- function(num){
if(num%%2==0){
print(paste("El numero ",num," es par"))
}else{
print(paste("El numero ",num," es impar"))
}
}
resultado(10)
promedio <- function(calificaciones) {
media <- mean(calificaciones)
texto <- paste0("CalificaciÃ³n: ", media, ", ")
if(media >= 6) {
print(paste0(texto, "aprobado"))
} else {
print(paste0(texto, "reprobado"))
}
}
promedio(c(6, 7, 8, 9, 8))
dado <- 1:6
for(cara in dado) {
dado ^ 2
dado <- 1:6
for(cara in dado) {
dado ^ 2
}
dado <- 1:6
for(cara in dado) {
dado ^ 2
}
dado <- 1:6
for(cara in dado) {
print(dado ^ 2)
}
dado <- 1:6
for(cara in dado) {
sqrtdado <- dado ^ 2
}
print(sqrtdado)
valor <-  0
mi_vector <- NULL
repeat{
valor <- valor + 1
if(valor == 5) {
break
}
}
valor
valor <-  0
mi_vector <- NULL
repeat{
valor <- valor + 1
print(valor)
if(valor == 5) {
break
}
}
valor
path = getwd()
print(path)
print(path)
setwd("D:/DataScience/Data Science - Curso/R")
path = getwd()
print(path)
setwd(path)
#Importación de datos ----
#read.table()
#read.csv()
#read.csv2()
mi_csv<-read.table("./Clase 4/mydata.csv",header=TRUE,sep=",",dec=".")
print(head(mi_csv))#veo los primeros
#read_excel()
#read_xls()
#read_xlxs()
mi_excel <- read_excel("./Clase 4/mydata.xlsx",col_names=TRUE)
print(head(mi_excel))
#install.packages("readxl")
library(readxl)
#read_excel()
#read_xls()
#read_xlxs()
mi_excel <- read_excel("./Clase 4/mydata.xlsx",col_names=TRUE)
print(head(mi_excel))
names(mi_excel)
#write.table(mi_csv,file="mi_csv.csv",row.names=False,sep=',')
str(mi_excel)
print(ncol(mi_excel))
#Cambiar el nombre
names(mi_csv)
names(mi_csv)[4] <-"TALLA"
names(mi_csv)
mi_csv2 <- read.csv("./Clase 4/mydata.csv",header=TRUE,sep=",",dec=".")
names(mi_csv2)[4]<-"TALLA"
names(mi_csv2)
#Eliminar columna 2 [fila,columna]
mi_csv2[,2]<-NULL
names(mi_csv2)
#Recortar columnas [, x:y]
mi_csv3 <- mi_csv[,2:3]
names(mi_csv3)
#Cambiar el nombre
names(mi_csv)
#Recortar columnas [, x:y]
mi_csv3 <- mi_csv[,3:4]
names(mi_csv3)
#Reordenar variables (columnas)
mi_csv <- mi_csv[c(2,3,1,4)]
names(mi_csv)
#Guardar/exportar dataframe
write.table(mi_csv, file="./Clase 4/mi_csv.txt",sep=",",row.names=FALSE)
#Guardar/exportar dataframe
write.table(mi_csv, file="./Clase 4/mi_csv.txt",sep=",",row.names=TRUE)
datos <- read-table("./Clase 4/mydata.csv",header=TRUE,sep=",",dec=".")
names(datos)
datos <- read.table("./Clase 4/mydata.csv",header=TRUE,sep=",",dec=".")
names(datos)
names(datos)[4]<-"TALLA"
#Para saber cantidad de NA
sum(is.na(datos))
#Para saber cantida de NA por columnas
colSums(is.na(datos))
#Para saber donde está ese valor NA en la columna
which(is.na(datos$TALLA)==TRUE)
datos$TALLA
datos$TALLA[16]
View(datos)
#Cambiar tipos de datos
class(datos$TALLA)<-as.numeric
