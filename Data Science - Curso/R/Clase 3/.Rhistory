1+1
1+1
2*2
2**2
3*2
3**2
4/2
8/3
8//3
8%3
8-11
x = 1+1
z
install.packages("UsingR")
x = read.table(file='dataset.csv',dec='.',sep = ',',header = TRUE)
x = read.table(file='./dataset.csv',dec='.',sep = ',',header = TRUE)
GETCWD
getcwd
x = read.table(file='/dataset.csv',dec='.',sep = ',',header = TRUE)
#x = read.table(file='dataset.csv',dec='.',sep = ',',header = TRUE)
x = read.table(file='dataset.csv',sep = ',',header = TRUE)
#x = read.table(file='dataset.csv',dec='.',sep = ',',header = TRUE)
x = read.table(file='dataset.csv')
#x = read.table(file='dataset.csv',dec='.',sep = ',',header = TRUE)
x = read.table(file='D:\Data Science - Curso\R\Clase 3\dataset.csv')
#x = read.table(file='dataset.csv',dec='.',sep = ',',header = TRUE)
x = read.table(file='D:/Data Science - Curso/R/Clase 3/dataset.csv')
#x = read.table(file='dataset.csv',dec='.',sep = ',',header = TRUE)
x = read.table(file='D:/Data Science - Curso/R/Clase 3/dataset.csv',,dec='.',sep = ',',header = TRUE)
View(x)
x
datos
datos = c(12.3,15.4,3,5,6,7)
datos[0]
datos[1]
datos[2]
datos[1],datos[2]
datos[1]+datos[2]
datos[2:5]
#datos[2:5]
datos<=7
datos[c(2,4:6)]
datos[datos>5]
datos[datos>7 & datos<15.4]
nuevo_vector = datos[datos>5]
nuevo_vector
ggsave('figures/fig1.png',p)
#p = ggplot(df,aes(x=x)) + geom_histogram()
#ggsave('figures/fig1.png',p)
df
x = read.table(file='D:/Data Science - Curso/R/Clase 3/bitcoin.csv',dec='.',sep = ',',header = TRUE)
ggsave('figures/fig1.png',p)
install.packages("ggplot2")
ggsave('D:/Data Science - Curso/R/Clase 3/figures/fig1.png',p)
library(dataset)
library(datasets)
help(airquality)
attach(airquality)
Ozone
Ozone[1:5]
Ozone[100]
c(Ozone[1:5],Ozone[100])
c(Ozone[1:5],,Ozone[100])
c(Ozone[1:5], ,Ozone[100])
c(Ozone[1:5],;,Ozone[100])
c(Ozone[1:5],texto,Ozone[100])
c(Ozone[1:5],'text',Ozone[100])
c(Ozone[1:5],Ozone[100])
#Para buscar entre los datos aquellos que cumplen una condicion
which(Month==5)
Ozone[which(Month==5)]
#Para contar la cantidad usamos length
length(which(Month==5))
x
y
table(Month)
table(Month)
#table(Month)
#Para contar la cantidad usamos length
length(which(Month==5))#table(Month)
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
#Para contar la cantidad usamos length
length(which(Month==5))#table(Month)
#
# #Para mostrar varios datos
# c(Ozone[1:5],Ozone[100])
#
#
# #Para buscar entre los datos aquellos que cumplen una condicion
# which(Month==5)
# Ozone[which(Month==5)]
#
#
# #Para contar la cantidad usamos length
# length(which(Month==5))#table(Month)
#Para mostrar varios datos
c(Ozone[1:5],Ozone[100])
x
y
x
X
e
e
e
e
e
ee
e
3+3
4+5
setwd("D:/Data Science - Curso/R/Clase 3")
setwd("D:/Data Science - Curso/R/Clase 3")
getwd()
ex2_1
ex2_1
ex2_1 <- sqrt(144)/27^(1/3)
print(ex2_1)
ex2_1
setwd("D:/Data Science - Curso/R/Clase 3")
ex2_1
ls <- list(lugar="Granja",
nombre="La vaca Lola",
numero_animales=6,
animales=c("gallo","gallina","conejo","caballo","perro","vaca"),
cantidad=c(1,8,6,4,2,1))
View(ls)
names(ls)
str(ls)
ls
getwd()
matrix(1:6)
matrix(1:6,nrow=2)
matrix(1:7,nrow=2)
matrix(1:7,nrow=3)
matrix(1:8,nrow=3)
matrix(1:8,nrow=2)
matrix(1:8,nrow=4)
matrix_2(1:8,nrow=4,byrow=TRUE)
matrix_2(1:8,nrow=2,byrow=TRUE)
matrix_2(1:4,nrow=2,byrow=TRUE)
matrix_2(1:4,nrow=2,byrow=TRUE)
matrix_2(1:6,nrow=2,byrow=TRUE)
matrix(1:6,nrow=2,byrow=TRUE)
cbind(c(1,2,3),c(4,5,6))
rbind(c(1,2,3),c(4,5,6))# rbind es para filas
x <- matrix(1:6, nrow=3)
x
x[1][2]
x[1,2]
x[,2]
x[:2]
x[1,]
x[-1,]
x[-1,]
x[-1,]
# Asignar nombres a filas y columnas----
x
colnames(x) <- c('Data1','Data2')
rownames(x) <- c('Item1','Item2','Item3')
x
str(x)
y <- 0
if y<10{
y <- y +1
}
y <- 0
if (y<10){
y <- y +1
}
y <- 0
if (y<10){
y <- y +1
}
else {
print("hello")
}
y <- 0
if (y<10){
y <- y +1
}else{
print("hello")
}
for (i in 1:4){
print(i)
}
for (i in 1:10){
print(i)
}
i<-0
while(i<10){
print(i)
}
i<-0
while(i<10){
i<-i+1
print(i)
}
y <- 0
if (y<10){
y <- y +1
print(y)
}else{
print("hello")
}
repeat{n<-n+1 if (n<10)break}
n<-0
repeat{n<-n+1 if (n<10) break}
n<-0
repeat{
n<-n+1
if (n<10) break}
n<-0
repeat{
print(n<-n+1)
if (n<10) break}
n<-0
repeat{
print(n<-n+1)
if (n==10) break}
